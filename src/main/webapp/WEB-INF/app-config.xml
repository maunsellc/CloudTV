<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.4.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- scan for all classes within the package, but IGNORE all annotated with 
		@Controller (they are configured in dispatcher context) -->
	<context:component-scan base-package="ie.cit.cloud">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:annotation-config />
	
	<aop:aspectj-autoproxy />

	<jdbc:embedded-database id="dataSource" type="H2"/>
	<!--  <cloud:data-source id="dataSource"/> -->
	<!-- <cloud:data-source id="dataSource"></cloud:data-source>  -->
	
	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<jdbc:initialize-database data-source="dataSource" ignore-failures="NONE">
		<jdbc:script location="classpath:db-schema.sql" />
	</jdbc:initialize-database>

	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/addreview.html" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/members.html" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/*" access="permitAll" />
		<security:form-login login-page="/login"
			default-target-url="/main"	
			authentication-failure-url="/login?status=invalid"/>
		<security:logout invalidate-session="true"
    		logout-success-url="/main" />
	</security:http>

	<!-- <security:global-method-security secured-annotations="enabled"/>-->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service id="userService" 
			                            data-source-ref="dataSource"
			                            users-by-username-query="select name as username, password, true from Members where name=?"
			                            authorities-by-username-query="select name as username,authority from Members where name=?"/>	
		</security:authentication-provider>
	</security:authentication-manager>
</beans>